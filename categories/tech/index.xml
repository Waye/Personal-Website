<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on ;)</title>
    <link>https://weiyi-hu.com/categories/tech/</link>
    <description>Recent content in Tech on ;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Aug 2021 20:36:00 +0000</lastBuildDate><atom:link href="https://weiyi-hu.com/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Graphql &#43; Relational Database for Dashboard </title>
      <link>https://weiyi-hu.com/2021/08/02/SickKids-Tech-GraphQL/</link>
      <pubDate>Mon, 02 Aug 2021 20:36:00 +0000</pubDate>
      
      <guid>https://weiyi-hu.com/2021/08/02/SickKids-Tech-GraphQL/</guid>
      <description>what is graphql Implementation Frontend Backend </description>
    </item>
    
    <item>
      <title>ElasticSearch&#43;Redis for general text search</title>
      <link>https://weiyi-hu.com/2021/08/01/SickKids-Tech-ElasticSearch/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://weiyi-hu.com/2021/08/01/SickKids-Tech-ElasticSearch/</guid>
      <description>What is Elastic-Search  Elasticsearch is document oriented, meaning that it stores entire objects or documents. It not only stores them, but also indexes the contents of each document in order to make them searchable. In Elasticsearch, you index, search, sort, and filter documents—​not rows of columnar data. This is a fundamentally different way of thinking about data and is one of the reasons Elasticsearch can perform complex full-text search. The act of storing data in Elasticsearch is called indexing.</description>
    </item>
    
    <item>
      <title>Java Apache Kafak Study</title>
      <link>https://weiyi-hu.com/2021/07/26/Apache-Kafka-Review/</link>
      <pubDate>Mon, 26 Jul 2021 21:05:00 +0000</pubDate>
      
      <guid>https://weiyi-hu.com/2021/07/26/Apache-Kafka-Review/</guid>
      <description>Fundamental Kafka Theory =&amp;gt;:send to
 data sources =&amp;gt;topics =&amp;gt; partition =&amp;gt; offsets  data is randomly sent to the partition unless the key is provided   brokers and topics  kafka cluster is composed of multiple brokers(servers) broker contains topics&#39; partitions connect to any broker, then connect to whole cluster   topics replication  if one broker is down, another broker can serve the data.  one broker can be leader for a given partition.</description>
    </item>
    
  </channel>
</rss>
